#A Humble barchart (Unordered)
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
df = pd.read_csv("District_PGI_Table_1.csv")
fig= plt.figure(figsize=(7, 5))
plt.title("How have India's districts performed")
df["Grade"]
df["Grade"].unique()
categories =['Uttam', 'Prachesta-1', 'Prachesta-2', 'Prachesta-3', 'Akanshi-1', 'Ati-Uttam'] #from df["Grade"].unique()
counts= df["Grade"].value_counts()[categories].tolist()
plt.bar(categories, counts)
plt.xlabel('Grade')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig('my_figure.png', bbox_inches='tight', dpi=300)

#BAR CHART ORDERED
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
df = pd.read_csv("District_PGI_Table_1.csv")
fig= plt.figure(figsize=(7, 5))
plt.title("How have India's districts performed")
df["Grade"]
df["Grade"].value_counts()
df_ranked=pd.DataFrame(df["Grade"].value_counts()).reset_index()#Turn into a dataframe
df_ranked
plt.bar(df_ranked["Grade"], df_ranked["count"])
plt.xlabel('Grade')
plt.ylabel('Count')
plt.tight_layout()
plt.savefig('my_figure1.png', bbox_inches='tight', dpi=300)

#THE DOT PLOT
df = pd.read_csv("District_PGI_Table_1.csv")
fig= plt.figure(figsize=(7, 5))
plt.title("How have India's districts performed")
df["Grade"]
df["Grade"].unique()
categories =['Uttam', 'Prachesta-1', 'Prachesta-2', 'Prachesta-3', 'Akanshi-1', 'Ati-Uttam'] #from df["Grade"].unique()
counts= df["Grade"].value_counts()[categories].tolist()
plt.scatter(categories, counts)

#LOLLIPOP CHART
import pandas as pd
import matplotlib.pyplot as plt
df = pd.read_csv("District_PGI_Table_1.csv")
fig= plt.figure(figsize=(9, 6))
plt.title("How have India's districts performed")
df["Grade"]
df["Grade"].unique()
categories =['Uttam', 'Prachesta-1', 'Prachesta-2', 'Prachesta-3', 'Akanshi-1', 'Ati-Uttam'] #from df["Grade"].unique()
counts= df["Grade"].value_counts()[categories].tolist()
plt.yticks([])
plt.xticks([])
plt.subplot(2,1,1)
plt.scatter(categories, counts)
plt.vlines(categories, 0, counts)
plt.ylabel('Grade')
plt.xlabel('Count')
plt.subplot(2,1,2)
plt.scatter(counts, categories)
plt.hlines(categories, 0, counts)
plt.ylabel('Count')
plt.xlabel('Grade')
plt.tight_layout()
plt.savefig('my_figure.png', bbox_inches='tight', dpi=300)
plt.xlabel('Grade')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig('my_figure.png', bbox_inches='tight', dpi=300)

# A PIE CHART 
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
fig= plt.figure(figsize=(7, 5))
df = pd.read_csv("District_PGI_Table_1.csv")
df
df["Grade"]
df_counts = df["Grade"].value_counts()
df_counts
plt.title("How the districts rank")
plt.pie(df_counts, labels=df_counts.index, autopct='%1.2f%%')
plt.tight_layout()
plt.savefig('my_figure1.png', bbox_inches='tight', dpi=300)

# A DONUT CHART
import pandas as pd
import matplotlib.pyplot as plt
fig= plt.figure(figsize=(7, 5))
plt.title("How the districts rank")
df = pd.read_csv("District_PGI_Table_1.csv")
df["Grade"]
df_counts = df["Grade"].value_counts()
df_counts
plt.pie(df_counts, labels=df_counts.index, autopct='%d%%', pctdistance=0.85)
centre_circle = plt.Circle((0, 0), 0.70, fc='white')
fig = plt.gcf()
fig.gca().add_artist(centre_circle)
plt.axis('equal')
plt.tight_layout()
plt.savefig('my_figure1.png', bbox_inches='tight', dpi=300)
pctdistance=0.85`: Moves the percentage labels closer to the center.
centre_circle = plt.Circle()`: Creates a white circle at the center.
`fig.gca().add_artist(centre_circle)`: Adds the circle to the plot.
`plt.axis('equal')`: Ensures the circle appears as a circle, not an ellipse.


#STACKED VERTICAL BAR CHART
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
df = pd.read_csv("District_PGI_Table_1.csv")
df_grade_counts = pd.DataFrame(df["Grade"].value_counts()).reset_index()
df_grade_counts


#Series 1 = (Prachesta-1, 290)
#Series 2 = (Uttam,	271)
#Series 3 = (Prachesta-2, 117)
#Series 4 = (Ati-Uttam, 51)
#Series 5 = (Prachesta-3	18ax = plt.axes()

#Data
labels = ['Performance']
sizes1 = [290]
sizes2 = [271]
sizes3= [117]
sizes4= [51]
sizes5 = [18]
ax=plt.axes()

x = np.arange(1)
height1 = sizes1
height2 = sizes2
height3 = sizes3
height4 = sizes4
height5 = sizes5

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
plt.title("Vertical Stacked Bar Chart")
ax.bar(x, height1, width=0.1, label = "Prachesta-1")
ax.bar(x, height2, bottom=height1, width=0.1, label = "Uttam")
ax.bar(x, height3, bottom=[x + y for x, y in zip(height1, height2)], width=0.1, label = "Prachesta-2")
ax.bar(x, height4, bottom=[x + y + z for x, y, z in zip(height1, height2, height3)],width=0.1, label = "Ati-Uttam")
ax.bar(x, height5, bottom=[x + y + z + w for x, y, z, w in zip(height1, height2, height3, height4)], width=0.1, label ="Prachesta-3")
ax.text(x, height1[0]/2, str(height1[0]), ha='center')
ax.text(x, height1[0] + height2[0]/2, str(height2[0]), ha='center')
ax.text(x, height1[0] + height2[0] + height3[0]/2, str(height3[0]), ha='center')
ax.text(x, height1[0] + height2[0] + height3[0] + height4[0]/2, str(height4[0]), ha='center')
ax.text(x, height1[0] + height2[0] + height3[0] + height4[0] + height5[0]/2, str(height5[0]), ha='center')
plt.xlim(-0.5, 0.5)
plt.legend()
plt.xlabel("Indicators")
plt.tight_layout()
plt.savefig('my_figure2.png', bbox_inches='tight', dpi=300)

# A HORIZONTAL STACKED BAR CHART
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
df = pd.read_csv("District_PGI_Table_1.csv")
df_grade_counts = pd.DataFrame(df["Grade"].value_counts()).reset_index()
df_grade_counts

#Series 1 = (Prachesta-1, 290)
#Series 2 = (Uttam,	271)
#Series 3 = (Prachesta-2, 117)
#Series 4 = (Ati-Uttam, 51)
#Series 5 = (Prachesta-3	18
ax = plt.axes()
#Data
labels = ['Performance']
sizes1 = [290]
sizes2 = [271]
sizes3= [117]
sizes4= [51]
sizes5 = [18]

plt.title("A Horizontal Stacked Bar Chart")
x = np.arange(1)
height1 = sizes1
height2 = sizes2
height3 = sizes3
height4 = sizes4
height5 = sizes5
bar_height = 0.10 #Height of the bar
ax.barh(0, height1, height = bar_height, label = "Prachesta-1")
ax.barh(0, height2, left=height1, height = bar_height, label = "Uttam")
ax.barh(0, height3, left=[x + y for x, y in zip(height1, height2)], height = bar_height,label = "Prachesta-2")
ax.barh(0, height4, left=[x + y + z for x, y, z in zip(height1, height2, height3)], height = bar_height, label = "Ati-Uttam")
ax.barh(0, height5, left=[x + y + z + w for x, y, z, w in zip(height1, height2, height3, height4)], height = bar_height, label ="Prachesta-3")
plt.ylim(0,0.4)
ax.legend()
ax.text(height1[0]/2, 0.02, str(height1[0]), ha='center')
ax.text(height1[0] + height2[0]/2, 0.02, str(height2[0]), ha='center')
ax.text(height1[0] + height2[0] + height3[0]/2, 0.02, str(height3[0]), ha='center')
ax.text(height1[0] + height2[0] + height3[0] + height4[0]/2, 0.02, str(height4[0]), ha='center')
ax.text(height1[0] + height2[0] + height3[0] + height4[0] + height5[0]/2, 0.02, str(height5[0]), ha='center')
plt.xlabel("Indicators")
plt.tight_layout()
plt.savefig('my_figure1.png', bbox_inches='tight', dpi=300)

